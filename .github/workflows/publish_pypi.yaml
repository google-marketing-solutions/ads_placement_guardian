name: Publish to PyPI & Create Tag

on:
  push:
    branches:
      - main  # Or your release branch

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Get versions and check for change
        id: version_check
        run: |
          PREV_VERSION=$(git show HEAD~1:backend/ads_placement_guardian/__init__.py | grep -oE "__version__ = '([0-9]+\.[0-9]+\.[0-9]+)'" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          CURRENT_VERSION=$(grep -oE "__version__ = '([0-9]+\.[0-9]+\.[0-9]+)'" backend/ads_placement_guardian/__init__.py | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')

          if [[ "$CURRENT_VERSION" != "$PREV_VERSION" ]]; then
            echo "Version change detected: $PREV_VERSION -> $CURRENT_VERSION"
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "No version change. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: steps.version_check.outputs.should_publish == 'true'
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version:  '22'

      - name: Cache Node.js Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm # Default location for npm cache
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node
      - name: Install frontend dependencies
        working-directory: ./frontend
        if: steps.version_check.outputs.should_publish == 'true'
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        if: steps.version_check.outputs.should_publish == 'true'
        run: npm run build

      - name: Build the package
        working-directory: ./backend
        if: steps.version_check.outputs.should_publish == 'true'
        run: uv build

      - name: Publish to PyPI
        working-directory: ./backend
        if: steps.version_check.outputs.should_publish == 'true'
        run: uv publish dist/*
